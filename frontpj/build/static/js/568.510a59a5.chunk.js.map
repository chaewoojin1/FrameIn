{"version":3,"file":"static/js/568.510a59a5.chunk.js","mappings":"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","sources":["components/admin/AdminLeft.jsx","components/admin/AdminLayout.jsx","util/jwtUtil.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/admin/AdminLeft.css\";\r\n\r\nconst AdminLeft = () => {\r\n  return (\r\n    <div className=\"admin-left\">\r\n      <h2 className=\"admin-title\">관리자 메뉴</h2>\r\n      <ul className=\"admin-menu\">\r\n        <li>\r\n          <Link to=\"/admin\">관리자 홈</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/admin/memberList\">회원 관리</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/admin/cinemas\">영화관 관리</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/admin/calendar\">일정 관리</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/admin/chatbot\">챗봇 관리</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/admin/paymentList\">결제 관리</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/admin/board\">게시판 관리</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLeft;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport jwtAxios from \"../../util/jwtUtil\"; // 이미 설정된 jwtAxios 사용\r\n\r\nimport \"../../css/admin/AdminLayout.css\"; \r\nimport AdminLeft from \"./AdminLeft\";\r\n\r\nconst AdminLayout = () => {\r\n  const [data, setData] = useState('');\r\n  \r\n  useEffect(() => {\r\n    const checkPermission = async () => {\r\n      try {\r\n        // 관리자 권한을 확인하는 API 호출\r\n        const response = await jwtAxios.get(\"http://43.201.20.172:8090/api/test\");\r\n        console.log(response.data);\r\n        setData(response.data.admin); // 관리자일 경우 권한 메시지 설정\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setData('접근 권한이 없습니다.'); // 권한이 없을 경우 메시지\r\n      }\r\n    };\r\n\r\n    checkPermission();\r\n  }, []);\r\n\r\n  if (data === '접근 권한이 없습니다.') {\r\n    return <div>{data}</div>; // 권한이 없을 경우 메시지 보여주기\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <AdminLeft />\r\n      <div className=\"admin-content\">\r\n        <Outlet /> {/* 자식 페이지들이 여기 렌더링됨 */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLayout;\r\n","import axios from \"axios\";\r\nimport { getCookie, setCookie } from \"./cookieUtil\";\r\n\r\nconst jwtAxios=axios.create()\r\n\r\nconst refreshJWT= async (accessToken, refreshToken)=>{\r\n    const header= {headers: {\"Authorization\": `Bearer ${accessToken}`}}\r\n    const res = await axios.get(`http://43.201.20.172:8090/api/member/refresh?refreshToken=${refreshToken}`, header)\r\n\r\n    return res.data\r\n}\r\n\r\nconst beforeReq= (config) =>{\r\n    const memberInfo=getCookie(\"member\")\r\n    if(!memberInfo){\r\n        return Promise.reject(\r\n            {response:\r\n             {data: \r\n              {error: \"REQUIRE_LOGIN\"}\r\n                }\r\n            }\r\n        )\r\n    }\r\n    const {accessToken} = memberInfo\r\n    config.headers.Authorization= `Bearer ${accessToken}`\r\n    return config\r\n}\r\n\r\nconst requestFail=(err)=>{\r\n    return Promise.reject(err)\r\n}\r\n\r\nconst beforeRes=async (res)=>{\r\n\r\n    const data= res.data\r\n    if(data && data.error ==='ERROR_ACCESS_TOKEN'){\r\n        const memberCookieValue=getCookie(\"member\")\r\n        const result=await refreshJWT(memberCookieValue.accessToken,\r\n            memberCookieValue.refreshToken)\r\n        memberCookieValue.accessToken=result.accessToken\r\n        memberCookieValue.refreshToken=result.refreshToken\r\n\r\n        setCookie(\"member\", JSON.stringify(memberCookieValue), 1)\r\n\r\n        const originalRequest=res.config\r\n        originalRequest.headers.Authorization= `Bearer ${result.accessToken}`\r\n\r\n        return await axios(originalRequest)\r\n    }\r\n\r\n\r\n    return res\r\n}\r\n\r\nconst responseFail=(err)=>{\r\n    return Promise.reject(err)\r\n}\r\n\r\njwtAxios.interceptors.request.use( beforeReq, requestFail)\r\njwtAxios.interceptors.response.use(beforeRes,responseFail)\r\n\r\nexport default jwtAxios"],"names":["AdminLeft","_jsxs","className","children","_jsx","Link","to","AdminLayout","data","setData","useState","useEffect","async","response","jwtAxios","get","console","log","admin","error","checkPermission","Outlet","axios","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","accessToken","headers","Authorization","err","res","memberCookieValue","result","refreshToken","header","refreshJWT","setCookie","JSON","stringify","originalRequest"],"sourceRoot":""}