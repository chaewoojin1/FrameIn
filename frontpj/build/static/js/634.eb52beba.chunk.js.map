{
    "version": 3,
    "file": "static/js/634.eb52beba.chunk.js",
    "mappings": "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",
    "sources": [
        "components/member/KakaoLogin.jsx",
        "components/member/Login.jsx",
        "pages/member/LoginPage.jsx",
        "api/kakaoApi.js"
    ],
    "sourcesContent": [
        "import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { getKakaoLoginLink } from '../../api/kakaoApi'\r\n\r\nconst KakaoLogin = () => {\r\n  const link = getKakaoLoginLink()\r\n\r\n  return (\r\n    <>\r\n      <Link to={link}>KAKAO LOGIN</Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default KakaoLogin",
        "import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { loginPostAsync } from \"../../slices/loginSlice\";\r\nimport \"../../css/Login.css\";\r\nimport KakaoLogin from \"./KakaoLogin\";\r\n\r\nconst initState = {\r\n  email: \"\",\r\n  pw: \"\",\r\n};\r\n\r\nconst Login = () => {\r\n  const [loginParam, setLoginParam] = useState(initState);\r\n  const [errors, setErrors] = useState({});\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [showPw, setShowPw] = useState(false);\r\n  const inputRef = useRef(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLoginParam((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const activeEnter = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleClickLogin();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  const validate = () => {\r\n    const newErrors = {};\r\n    if (!loginParam.email) newErrors.email = \"이메일을 입력하세요.\";\r\n    if (!loginParam.pw) newErrors.pw = \"비밀번호를 입력하세요.\";\r\n    return newErrors;\r\n  };\r\n\r\n  const handleClickLogin = () => {\r\n    const validationErrors = validate();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    dispatch(loginPostAsync(loginParam)) //비동기방식\r\n      .unwrap()\r\n      .then((data) => {\r\n        if (!data.accessToken) {\r\n          setErrors({ general: \"이메일과 비밀번호를 다시 확인하세요\" });\r\n        } else {\r\n          navigate(\"/\", { replace: true });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"로그인 오류:\", error);\r\n        setErrors({ general: \"로그인 중 오류가 발생했습니다.\" });\r\n      });\r\n  };\r\n\r\n  const toggleShowPw = () => {\r\n    setShowPw(!showPw);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>로그인</h1>\r\n      <div className=\"login-con\">\r\n        <div className=\"email\">\r\n          <span>이메일</span>\r\n          <input\r\n            id=\"email\"\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder=\"이메일을 입력하세요.\"\r\n            value={loginParam.email}\r\n            onChange={handleChange}\r\n            onKeyDown={activeEnter}\r\n            ref={inputRef}\r\n          />\r\n        </div>\r\n        <div className=\"password\">\r\n          <span>비밀번호</span>\r\n          <div>\r\n            <input\r\n              id=\"pw\"\r\n              type={showPw ? \"text\" : \"password\"}\r\n              name=\"pw\"\r\n              value={loginParam.pw}\r\n              placeholder=\"비밀번호를 입력하세요.\"\r\n              onChange={handleChange}\r\n              onKeyDown={activeEnter}\r\n            />\r\n            {showPw ? ( //비밀번호 보이기/숨기기\r\n              <div className=\"eye\" onClick={toggleShowPw}>\r\n                {\" \"}\r\n                <img src=\"/image/eye.svg\" alt=\"eye\" />\r\n              </div>\r\n            ) : (\r\n              <div className=\"eye\" onClick={toggleShowPw}>\r\n                {\" \"}\r\n                <img src=\"/image/eye-slash.svg\" alt=\"eye-slash\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div id=\"error-msg\">\r\n          {[\"email\", \"pw\", \"general\"].map(\r\n            (key) =>\r\n              errors[key] && (\r\n                <span key={key} className=\"error-message\">\r\n                  {errors[key]}\r\n                </span>\r\n              )\r\n          )}\r\n        </div>\r\n        <div className=\"btn\">\r\n          <button onClick={handleClickLogin}>로그인</button>\r\n          <KakaoLogin />\r\n          <Link to=\"/member/join\">회원가입</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n",
        "import React from 'react'\r\nimport Login from '../../components/member/Login'\r\n\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <>\r\n            <Login />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginPage",
        "import axios from \"axios\"\r\nconst redirect_uri = `http://43.201.20.172:3000/member/kakao`\r\n\r\nconst auth_code_path = `https://kauth.kakao.com/oauth/authorize`\r\n\r\nconst access_token_url = `https://kauth.kakao.com/oauth/token`\r\n\r\nexport const getKakaoLoginLink = () => {\r\n    const kakaoURL = `${auth_code_path}?client_id=${process.env.REACT_APP_KAKAO_LOGIN_API_KEY}&redirect_uri=${redirect_uri}&response_type=code`\r\n    return kakaoURL\r\n}\r\n\r\nexport const getAccessToken = async (authCode) => {\r\n    const header = {\r\n        headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        }\r\n    }\r\n    const params = {\r\n        grant_type: \"authorization_code\",\r\n        client_id: process.env.REACT_APP_KAKAO_LOGIN_API_KEY,\r\n        redirect_uri: redirect_uri,\r\n        code: authCode\r\n    }\r\n\r\n    const res = await axios.post(access_token_url, params, header)\r\n\r\n    const accessToken = res.data.access_token\r\n\r\n    return accessToken\r\n}\r\n\r\nexport const getMemberWithAccessToken = async (accessToken) => {\r\n    const res = await axios.get(`http://43.201.20.172:8090/api/member/kakao?accessToken=${accessToken}`)\r\n    return res.data\r\n}"
    ],
    "names": [
        "KakaoLogin",
        "link",
        "getKakaoLoginLink",
        "_jsx",
        "_Fragment",
        "children",
        "Link",
        "to",
        "initState",
        "email",
        "pw",
        "Login",
        "loginParam",
        "setLoginParam",
        "useState",
        "errors",
        "setErrors",
        "dispatch",
        "useDispatch",
        "navigate",
        "useNavigate",
        "showPw",
        "setShowPw",
        "inputRef",
        "useRef",
        "handleChange",
        "e",
        "name",
        "value",
        "target",
        "prev",
        "activeEnter",
        "key",
        "handleClickLogin",
        "useEffect",
        "current",
        "focus",
        "validationErrors",
        "validate",
        "newErrors",
        "Object",
        "keys",
        "length",
        "loginPostAsync",
        "unwrap",
        "then",
        "data",
        "accessToken",
        "replace",
        "general",
        "catch",
        "error",
        "console",
        "toggleShowPw",
        "_jsxs",
        "className",
        "id",
        "type",
        "placeholder",
        "onChange",
        "onKeyDown",
        "ref",
        "onClick",
        "src",
        "alt",
        "map",
        "LoginPage",
        "redirect_uri",
        "getAccessToken",
        "async",
        "params",
        "grant_type",
        "client_id",
        "process",
        "code",
        "authCode",
        "axios",
        "post",
        "headers",
        "access_token",
        "getMemberWithAccessToken",
        "get"
    ],
    "sourceRoot": ""
}