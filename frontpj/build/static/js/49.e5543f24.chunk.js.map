{"version":3,"file":"static/js/49.e5543f24.chunk.js","mappings":"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","sources":["components/payment/Payment.jsx","pages/payment/PaymentPage.jsx","util/jwtUtil.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nimport \"../../css/Payment.css\";\r\n\r\nconst Payment = () => {\r\n  const [paymentItems, setPaymentItems] = useState([]);\r\n  const [paymentMethod, setPaymentMethod] = useState(null);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const cartItemIds = location.state?.cartItemIds || [];\r\n\r\n  useEffect(() => {\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        const response = await jwtAxios.get(\r\n          \"http://43.201.20.172:8090/api/myinfo/detail\",\r\n          {\r\n            withCredentials: true,\r\n          }\r\n        );\r\n        console.log(\" 사용자 정보:\", response.data);\r\n        setUserInfo(response.data);\r\n      } catch (error) {\r\n        console.error(\" 사용자 정보 가져오기 오류:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserInfo();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchPaymentItems = async () => {\r\n      try {\r\n        const response = await jwtAxios.post(\r\n          \"http://43.201.20.172:8090/api/payment/orderSettlement\",\r\n          cartItemIds,\r\n          { withCredentials: true }\r\n        );\r\n        console.log(\" 결제 정보:\", response.data);\r\n        setPaymentItems(response.data);\r\n      } catch (error) {\r\n        console.error(\"결제 정보 가져오기 오류:\", error);\r\n      }\r\n    };\r\n\r\n    if (cartItemIds.length > 0) {\r\n      fetchPaymentItems();\r\n    }\r\n  }, [cartItemIds]);\r\n\r\n  const totalPrice = paymentItems.reduce(\r\n    (total, item) => total + item.price,\r\n    0\r\n  );\r\n\r\n  const paymentGo = async () => {\r\n    if (!paymentMethod) {\r\n      alert(\"결제 수단을 선택하세요.\");\r\n      return;\r\n    }\r\n\r\n    if (!userInfo) {\r\n      alert(\"로그인 정보가 없습니다. 다시 로그인하세요.\");\r\n      return;\r\n    }\r\n\r\n    if (cartItemIds.length === 0) {\r\n      alert(\"결제할 항목이 없습니다.\");\r\n      return;\r\n    }\r\n\r\n    console.log(\" 장바구니 항목 ID:\", cartItemIds);\r\n\r\n    const { IMP } = window;\r\n    IMP.init(\"imp06751501\");\r\n\r\n    let pgProvider = \"\";\r\n    switch (paymentMethod) {\r\n      case \"kakaoPay\":\r\n        pgProvider = \"kakaopay.TC0ONETIME\";\r\n        break;\r\n      case \"credit_card\":\r\n        pgProvider = \"html5_inicis.INIBillTst\";\r\n        break;\r\n      case \"tossPay\":\r\n        pgProvider = \"uplus.tlgdacomxpay\";\r\n        break;\r\n      case \"mobile\":\r\n        pgProvider = \"danal_tpay.9810030929\";\r\n        break;\r\n      default:\r\n        alert(\"올바른 결제 수단을 선택하세요.\");\r\n        return;\r\n    }\r\n\r\n    console.log(\" 선택한 PG사:\", pgProvider);\r\n\r\n    const merchantUid = `order_${new Date().getTime()}`;\r\n\r\n    IMP.request_pay(\r\n      {\r\n        pg: pgProvider,\r\n        pay_method: \"card\",\r\n        merchant_uid: merchantUid,\r\n        name: \"영화 예매\",\r\n        amount: totalPrice,\r\n        buyer_email: userInfo.email,\r\n        buyer_name: userInfo.nickname,\r\n      },\r\n      async (response) => {\r\n        if (response.success) {\r\n          console.log(\" 결제 성공:\", response);\r\n\r\n          try {\r\n            console.log(\" 결제 검증 요청 시작:\", response.imp_uid);\r\n            const verifyResponse = await jwtAxios.post(\r\n              \"http://43.201.20.172:8090/api/payment/verify\",\r\n              {\r\n                imp_uid: response.imp_uid,\r\n                amount: totalPrice,\r\n              },\r\n              { withCredentials: true }\r\n            ); //  이 설정이 없으면 CORS 에러 가능\r\n\r\n            console.log(\" 결제 검증 결과:\", verifyResponse.data);\r\n\r\n            if (verifyResponse.data === \"결제 검증 성공\") {\r\n              console.log(\" 결제 정보 저장 요청 시작\");\r\n              const saveResponse = await jwtAxios.post(\r\n                \"http://43.201.20.172:8090/api/payment/save\",\r\n                {\r\n                  cartItemIds: cartItemIds,\r\n                  paymentMethod: paymentMethod,\r\n                  totalPrice: totalPrice,\r\n                }\r\n              );\r\n\r\n              console.log(\" 결제 저장 결과:\", saveResponse.data);\r\n              alert(\"결제가 완료되었습니다.\");\r\n              navigate(\"/\");\r\n            } else {\r\n              alert(\" 결제 검증 실패\");\r\n            }\r\n          } catch (error) {\r\n            console.error(\" 결제 검증 또는 저장 오류:\", error);\r\n            alert(\"결제 처리 중 오류가 발생했습니다.\");\r\n          }\r\n        } else {\r\n          console.error(\" 결제 실패:\", response.error_msg);\r\n          alert(`결제 실패: ${response.error_msg}`);\r\n        }\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"payment\">\r\n      <h1>결제 페이지</h1>\r\n      <div className=\"payment-con\">\r\n        <div className=\"reservation\">\r\n          <h3>예매 정보</h3>\r\n          {paymentItems.length > 0 ? (\r\n            paymentItems.map((item, index) => (\r\n              <div key={index} className=\"payment-item\">\r\n                <img\r\n                  src={item.poster_path}\r\n                  alt={item.movieNm}\r\n                />\r\n                <div className=\"movieDetail\">\r\n                  <span> 영화: {item.movieNm}</span>\r\n                  <span> 상영 날짜: {item.screeningDate}</span>\r\n                  <span> 상영 시간: {item.screeningTime}</span>\r\n                  <span> 상영관: {item.theaterName}</span>\r\n                  <span> 좌석 번호: {item.seatNumber}</span>\r\n                  <span> 가격: {item.price.toLocaleString()} 원</span>\r\n                  <span> 영화관: {item.cinemaName}</span>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>결제할 항목이 없습니다.</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"payment-selection\">\r\n          <h3>결제수단</h3>\r\n          <div className=\"payment-method-con\">\r\n            <div className=\"payment-method\">\r\n              <button\r\n                className={paymentMethod === \"credit_card\" ? \"selected\" : \"\"}\r\n                onClick={() => setPaymentMethod(\"credit_card\")}\r\n              >\r\n                신용카드\r\n              </button>\r\n\r\n              <button\r\n                className={paymentMethod === \"kakaoPay\" ? \"selected\" : \"\"}\r\n                onClick={() => setPaymentMethod(\"kakaoPay\")}\r\n              >\r\n                카카오페이\r\n              </button>\r\n\r\n              <button\r\n                className={paymentMethod === \"tossPay\" ? \"selected\" : \"\"}\r\n                onClick={() => setPaymentMethod(\"tossPay\")}\r\n              >\r\n                토스페이\r\n              </button>\r\n\r\n              <button\r\n                className={paymentMethod === \"mobile\" ? \"selected\" : \"\"}\r\n                onClick={() => setPaymentMethod(\"mobile\")}\r\n              >\r\n                휴대폰\r\n              </button>\r\n            </div>\r\n            <div className=\"payment-motion\">\r\n              {paymentMethod === \"credit_card\" && (\r\n                <div className=\"credit-card-motion\">\r\n                  <div className=\"credit-card-inner\">\r\n                    <div className=\"credit-card-front\">\r\n                      <div className=\"front-chip\">\r\n                        <img\r\n                          src=\"./../image/chip.png\"\r\n                          alt=\"chip\"\r\n                          className=\"chip\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"credit-card-back\">\r\n                      <div className=\"credit-card-back-inner\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {paymentMethod === \"kakaoPay\" && (\r\n                <div className=\"kakaoPay-motion\">\r\n                  <div className=\"kakaoPay-inner\">\r\n                    <div className=\"kakaoPay-front\">\r\n                      <img\r\n                        src=\"./../image/kakaoPayCard.png\"\r\n                        alt=\"card\"\r\n                        className=\"card\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"kakaoPay-back\">\r\n                      <div className=\"kakaoPay-back-inner\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {paymentMethod === \"tossPay\" && (\r\n                <div className=\"tossPay-motion\">\r\n                  <div className=\"tossPay-inner\">\r\n                    <div className=\"tossPay-front\">\r\n                      <video\r\n                        autoPlay\r\n                        loop\r\n                        muted\r\n                        className=\"tossPay-video\"\r\n                        src=\"./../video/tossMotion_dark.mp4\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"tossPay-back\">\r\n                      <video\r\n                        autoPlay\r\n                        loop\r\n                        muted\r\n                        className=\"tossPay-video\"\r\n                        src=\"./../video/tossMotion_light.mp4\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {paymentMethod === \"mobile\" && (\r\n                <div className=\"mobile-motion\">\r\n                  <div className=\"mobile-inner\">\r\n                    <div className=\"mobile-front\">\r\n                      <div className=\"mobile-front-inner\">\r\n                        <div className=\"notch\"></div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mobile-back\">\r\n                      <div className=\"mobile-back-camera\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"payment-go\">\r\n          <div className=\"payment-go-top\">\r\n          </div>\r\n          <div className=\"payment-footer\">\r\n            <h2>결제 금액: {totalPrice.toLocaleString()} 원</h2>\r\n            <button onClick={paymentGo}>결제하기</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","import React from 'react'\r\nimport Payment from '../../components/payment/Payment'\r\n\r\nconst PaymentPage = () => {\r\n    return (\r\n        <>\r\n            <Payment />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentPage","import axios from \"axios\";\r\nimport { getCookie, setCookie } from \"./cookieUtil\";\r\n\r\nconst jwtAxios=axios.create()\r\n\r\nconst refreshJWT= async (accessToken, refreshToken)=>{\r\n    const header= {headers: {\"Authorization\": `Bearer ${accessToken}`}}\r\n    const res = await axios.get(`http://43.201.20.172:8090/api/member/refresh?refreshToken=${refreshToken}`, header)\r\n\r\n    return res.data\r\n}\r\n\r\nconst beforeReq= (config) =>{\r\n    const memberInfo=getCookie(\"member\")\r\n    if(!memberInfo){\r\n        return Promise.reject(\r\n            {response:\r\n             {data: \r\n              {error: \"REQUIRE_LOGIN\"}\r\n                }\r\n            }\r\n        )\r\n    }\r\n    const {accessToken} = memberInfo\r\n    config.headers.Authorization= `Bearer ${accessToken}`\r\n    return config\r\n}\r\n\r\nconst requestFail=(err)=>{\r\n    return Promise.reject(err)\r\n}\r\n\r\nconst beforeRes=async (res)=>{\r\n\r\n    const data= res.data\r\n    if(data && data.error ==='ERROR_ACCESS_TOKEN'){\r\n        const memberCookieValue=getCookie(\"member\")\r\n        const result=await refreshJWT(memberCookieValue.accessToken,\r\n            memberCookieValue.refreshToken)\r\n        memberCookieValue.accessToken=result.accessToken\r\n        memberCookieValue.refreshToken=result.refreshToken\r\n\r\n        setCookie(\"member\", JSON.stringify(memberCookieValue), 1)\r\n\r\n        const originalRequest=res.config\r\n        originalRequest.headers.Authorization= `Bearer ${result.accessToken}`\r\n\r\n        return await axios(originalRequest)\r\n    }\r\n\r\n\r\n    return res\r\n}\r\n\r\nconst responseFail=(err)=>{\r\n    return Promise.reject(err)\r\n}\r\n\r\njwtAxios.interceptors.request.use( beforeReq, requestFail)\r\njwtAxios.interceptors.response.use(beforeRes,responseFail)\r\n\r\nexport default jwtAxios"],"names":["Payment","_location$state","paymentItems","setPaymentItems","useState","paymentMethod","setPaymentMethod","userInfo","setUserInfo","navigate","useNavigate","cartItemIds","useLocation","state","useEffect","async","response","jwtAxios","get","withCredentials","console","log","data","error","fetchUserInfo","length","post","fetchPaymentItems","totalPrice","reduce","total","item","price","_jsxs","className","children","_jsx","map","index","src","poster_path","alt","movieNm","screeningDate","screeningTime","theaterName","seatNumber","toLocaleString","cinemaName","onClick","autoPlay","loop","muted","alert","IMP","window","init","pgProvider","merchantUid","Date","getTime","request_pay","pg","pay_method","merchant_uid","name","amount","buyer_email","email","buyer_name","nickname","success","imp_uid","verifyResponse","saveResponse","error_msg","PaymentPage","_Fragment","axios","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","accessToken","headers","Authorization","err","res","memberCookieValue","result","refreshToken","header","refreshJWT","setCookie","JSON","stringify","originalRequest"],"sourceRoot":""}