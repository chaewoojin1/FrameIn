{"version":3,"file":"static/js/615.e5eb6c09.chunk.js","mappings":"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","sources":["util/jwtUtil.js","components/admin/calendar/EventModal.jsx","components/admin/calendar/Calendar.jsx","pages/calendar/CalendarPage.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { getCookie, setCookie } from \"./cookieUtil\";\r\n\r\nconst jwtAxios=axios.create()\r\n\r\nconst refreshJWT= async (accessToken, refreshToken)=>{\r\n    const header= {headers: {\"Authorization\": `Bearer ${accessToken}`}}\r\n    const res = await axios.get(`http://43.201.20.172:8090/api/member/refresh?refreshToken=${refreshToken}`, header)\r\n\r\n    return res.data\r\n}\r\n\r\nconst beforeReq= (config) =>{\r\n    const memberInfo=getCookie(\"member\")\r\n    if(!memberInfo){\r\n        return Promise.reject(\r\n            {response:\r\n             {data: \r\n              {error: \"REQUIRE_LOGIN\"}\r\n                }\r\n            }\r\n        )\r\n    }\r\n    const {accessToken} = memberInfo\r\n    config.headers.Authorization= `Bearer ${accessToken}`\r\n    return config\r\n}\r\n\r\nconst requestFail=(err)=>{\r\n    return Promise.reject(err)\r\n}\r\n\r\nconst beforeRes=async (res)=>{\r\n\r\n    const data= res.data\r\n    if(data && data.error ==='ERROR_ACCESS_TOKEN'){\r\n        const memberCookieValue=getCookie(\"member\")\r\n        const result=await refreshJWT(memberCookieValue.accessToken,\r\n            memberCookieValue.refreshToken)\r\n        memberCookieValue.accessToken=result.accessToken\r\n        memberCookieValue.refreshToken=result.refreshToken\r\n\r\n        setCookie(\"member\", JSON.stringify(memberCookieValue), 1)\r\n\r\n        const originalRequest=res.config\r\n        originalRequest.headers.Authorization= `Bearer ${result.accessToken}`\r\n\r\n        return await axios(originalRequest)\r\n    }\r\n\r\n\r\n    return res\r\n}\r\n\r\nconst responseFail=(err)=>{\r\n    return Promise.reject(err)\r\n}\r\n\r\njwtAxios.interceptors.request.use( beforeReq, requestFail)\r\njwtAxios.interceptors.response.use(beforeRes,responseFail)\r\n\r\nexport default jwtAxios","import React from \"react\";\r\nimport { Modal, Button, TextField } from \"@mui/material\";\r\n\r\nconst EventModal = ({ open, setOpen, newEvent, setNewEvent, addEvent }) => {\r\n  return (\r\n    <Modal open={open} onClose={() => setOpen(false)}>\r\n      <div style={{ padding: 20, background: \"#fff\", margin: \"10% auto\", width: 400 }}>\r\n      <h3 style={{ color: \"black\" }}>캘린더를 드래그 해 일정 추가도 가능합니다.</h3>\r\n\r\n\r\n        <TextField\r\n          label=\"일정 내용\"\r\n          fullWidth\r\n          value={newEvent.content}\r\n          onChange={(e) => setNewEvent({ ...newEvent, content: e.target.value })}\r\n        />\r\n\r\n        <TextField\r\n          label=\"시작 날짜\"\r\n          type=\"datetime-local\"\r\n          fullWidth\r\n          InputLabelProps={{ shrink: true }}\r\n          value={newEvent.start} // 드래그한 날짜 자동 반영\r\n          onChange={(e) => setNewEvent({ ...newEvent, start: e.target.value })}\r\n        />\r\n\r\n        <TextField\r\n          label=\"종료 날짜\"\r\n          type=\"datetime-local\"\r\n          fullWidth\r\n          InputLabelProps={{ shrink: true }}\r\n          value={newEvent.end} // 드래그한 날짜 자동 반영\r\n          onChange={(e) => setNewEvent({ ...newEvent, end: e.target.value })}\r\n        />\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={addEvent} fullWidth>\r\n          추가\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"secondary\" onClick={() => setOpen(false)} fullWidth>\r\n          취소\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EventModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport axios from \"axios\";\r\n\r\nimport EventModal from \"./EventModal\";\r\nimport jwtAxios from \"../../../util/jwtUtil\";\r\n\r\n// 공휴일 가져오기\r\nconst fetchHolidayEvents = async () => {\r\n  try {\r\n    const res = await axios.get(\r\n      \"https://www.googleapis.com/calendar/v3/calendars/ko.south_korea%23holiday%40group.v.calendar.google.com/events\",\r\n      { params: { key: \"process.env.REACT_APP_GOOGLE_API_KEY\" } }\r\n    );\r\n    return res.data.items.map((item) => ({\r\n      id: `holiday-${item.id}`, // ID 추가 (중복 방지)\r\n      title: item.summary,\r\n      start: item.start.date || item.start.dateTime.split(\"T\")[0], // 날짜만 표시\r\n      end: item.end.date || item.end.dateTime.split(\"T\")[0],\r\n      isHoliday: true, // 공휴일 여부 추가\r\n    }));\r\n  } catch (error) {\r\n    console.error(\"공휴일 로딩 오류:\", error);  \r\n    return [];\r\n  }\r\n};\r\n\r\nconst Calendar = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [holidays, setHolidays] = useState([]); // 공휴일 별도 관리\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [newEvent, setNewEvent] = useState({ content: \"\", start: \"\", end: \"\" });\r\n\r\n  // 모든 일정 불러오기 (공휴일 포함)\r\n  const fetchAllEvents = async () => {\r\n    try {\r\n      const [dbRes, holidayEvents] = await Promise.all([\r\n        jwtAxios.get(\"http://43.201.20.172:8090/admin/calendar\"),\r\n        fetchHolidayEvents(),\r\n      ]);\r\n      setHolidays(holidayEvents); // 공휴일 유지\r\n      setEvents([...dbRes.data, ...holidayEvents]); // 공휴일 + 일반 일정 합치기\r\n    } catch (error) {\r\n      console.error(\"일정 로딩 오류:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllEvents();\r\n  }, []);\r\n\r\n  const addEvent = async () => {\r\n    try {\r\n      console.log(\"보내는 이벤트 데이터: \", newEvent);\r\n      await jwtAxios.post(\"http://43.201.20.172:8090/admin/calendar\", newEvent, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });      \r\n      await fetchAllEvents(); // 일정 추가 후 공휴일 유지\r\n      setModalOpen(false);\r\n      setNewEvent({ content: \"\", start: \"\", end: \"\" });\r\n    } catch (error) {\r\n      console.error(\"일정 추가 오류:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteEvent = async (eventId) => {\r\n    if (window.confirm(\"정말로 이 일정을 삭제하시겠습니까?\")) {\r\n      try {\r\n        await jwtAxios.delete(`http://43.201.20.172:8090/admin/calendar/${eventId}`);\r\n        alert(\"일정이 삭제되었습니다.\");\r\n        await fetchAllEvents(); // 삭제 후 공휴일 유지\r\n      } catch (error) {\r\n        console.error(\"일정 삭제 오류:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        events={events.map((event) => ({\r\n          id: event.id,\r\n          title: event.content || event.title, // 일반 일정 vs 공휴일\r\n          start: event.start,\r\n          end: event.end,\r\n          isHoliday: event.isHoliday, // 공휴일 여부 추가\r\n        }))}\r\n        selectable={true}\r\n        select={(selectInfo) => {\r\n          const startDateTime = selectInfo.startStr + \"T00:00\";\r\n          const realEndDate = new Date(selectInfo.endStr);\r\n          realEndDate.setDate(realEndDate.getDate() - 1);\r\n          const endDateTime = realEndDate.toISOString().split(\"T\")[0] + \"T23:59\";\r\n\r\n          setNewEvent({ content: \"\", start: startDateTime, end: endDateTime });\r\n          setModalOpen(true);\r\n        }}\r\n        eventClick={(event) => {\r\n          if (!event.event.extendedProps.isHoliday) {\r\n            handleDeleteEvent(event.event.id);\r\n          }\r\n        }}\r\n        eventContent={(arg) => {\r\n          const { isHoliday } = arg.event.extendedProps;\r\n          const start = arg.event.start;\r\n          let displayHtml = \"\";\r\n\r\n          if (isHoliday) {\r\n            // 공휴일은 시간 없이 날짜만 표시\r\n            displayHtml = `<b>${arg.event.title}</b>`;\r\n          } else if (start && start.toISOString().includes(\"T\")) {\r\n            // 일반 일정이면 시간 포함\r\n            const eventTime = new Date(start).toLocaleTimeString(\"ko-KR\", {\r\n              hour: \"numeric\",\r\n              minute: \"numeric\",\r\n              hour12: true,\r\n            });\r\n            displayHtml = `<b>${eventTime}</b> ${arg.event.title}`;\r\n          } else {\r\n            displayHtml = arg.event.title;\r\n          }\r\n          return { html: displayHtml };\r\n        }}\r\n        customButtons={{\r\n          addEventButton: {\r\n            text: \"일정 추가\",\r\n            click: () => setModalOpen(true),\r\n          },\r\n        }}\r\n        headerToolbar={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"addEventButton\",\r\n        }}\r\n      />\r\n\r\n      <EventModal\r\n        open={modalOpen}\r\n        setOpen={setModalOpen}\r\n        newEvent={newEvent}\r\n        setNewEvent={setNewEvent}\r\n        addEvent={addEvent}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\nimport Calendar from \"../../components/admin/calendar/Calendar\";\r\n\r\nconst CalendarPage = () => {\r\n  return (\r\n    <div>\r\n      \r\n      <Calendar />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarPage;\r\n"],"names":["jwtAxios","axios","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","response","data","error","accessToken","headers","Authorization","err","async","res","memberCookieValue","result","refreshToken","header","get","refreshJWT","setCookie","JSON","stringify","originalRequest","_ref","open","setOpen","newEvent","setNewEvent","addEvent","_jsx","Modal","onClose","children","_jsxs","style","padding","background","margin","width","color","TextField","label","fullWidth","value","content","onChange","e","target","type","InputLabelProps","shrink","start","end","Button","variant","onClick","fetchHolidayEvents","params","key","items","map","item","id","title","summary","date","dateTime","split","isHoliday","console","Calendar","events","setEvents","useState","holidays","setHolidays","modalOpen","setModalOpen","fetchAllEvents","dbRes","holidayEvents","all","useEffect","FullCalendar","plugins","dayGridPlugin","interactionPlugin","initialView","event","selectable","select","selectInfo","startDateTime","startStr","realEndDate","Date","endStr","setDate","getDate","endDateTime","toISOString","eventClick","extendedProps","window","confirm","delete","eventId","alert","handleDeleteEvent","eventContent","arg","displayHtml","includes","toLocaleTimeString","hour","minute","hour12","html","customButtons","addEventButton","text","click","headerToolbar","left","center","right","EventModal","log","post","CalendarPage"],"sourceRoot":""}