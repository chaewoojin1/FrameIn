{"version":3,"file":"static/js/91.5cb80004.chunk.js","mappings":"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","sources":["components/admin/member/MemberList.jsx","util/jwtUtil.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport jwtAxios from \"../../../util/jwtUtil\";\r\nimport \"../../../css/admin/MemberList.css\";\r\n\r\nconst MemberList = () => {\r\n  const [members, setMembers] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const size = 10;\r\n\r\n  const [searchType, setSearchType] = useState(\"email\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const [selectedMember, setSelectedMember] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    pw: \"\",\r\n    nickname: \"\",\r\n    social: false,\r\n    roleNames: [],\r\n  });\r\n\r\n  // 검색 및 페이지네이션 적용하여 회원 목록 조회\r\n  const fetchMembers = async () => {\r\n    try {\r\n      const response = await jwtAxios.get(\"http://43.201.20.172:8090/admin/members/search\", {\r\n        params: {\r\n          page: page,\r\n          size: size,\r\n          [searchType]: searchValue,\r\n        },\r\n      });\r\n      if (response.data && response.data.content) {\r\n        setMembers(response.data.content);\r\n        setTotalPages(response.data.totalPages);\r\n      } else {\r\n        setMembers([]);\r\n        setTotalPages(0);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"멤버 데이터 가져오기 실패:\", error);\r\n      setMembers([]);\r\n      setTotalPages(0);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMembers();\r\n  }, [page, searchType, searchValue]);\r\n\r\n  const handleSearchSubmit = (e) => {\r\n    e.preventDefault();\r\n    setPage(0);\r\n    fetchMembers();\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const openEditModal = (member) => {\r\n    setSelectedMember(member);\r\n    setFormData({\r\n      email: member.email,\r\n      pw: \"\",\r\n      nickname: member.nickname,\r\n      social: member.social,\r\n      roleNames: member.roleNames && member.roleNames.length > 0 ? [member.roleNames[0]] : [],\r\n    });\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleUpdateMember = async () => {\r\n    try {\r\n      await jwtAxios.put(\r\n        `http://43.201.20.172:8090/admin/members/${selectedMember.email}`,\r\n        formData,\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      );\r\n      fetchMembers();\r\n      setShowModal(false);\r\n      setSelectedMember(null);\r\n      setFormData({ email: \"\", pw: \"\", nickname: \"\", social: false, roleNames: [] });\r\n    } catch (error) {\r\n      console.error(\"멤버 수정 오류:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteMember = async () => {\r\n    if (window.confirm(\"정말로 이 회원을 삭제하시겠습니까?\")) {\r\n      try {\r\n        await jwtAxios.delete(`http://43.201.20.172:8090/admin/members/${selectedMember.email}`);\r\n        fetchMembers();\r\n        setShowModal(false);\r\n        setSelectedMember(null);\r\n        setFormData({ email: \"\", pw: \"\", nickname: \"\", social: false, roleNames: [] });\r\n      } catch (error) {\r\n        console.error(\"멤버 삭제 오류:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 0 && newPage < totalPages) {\r\n      setPage(newPage);\r\n    }\r\n  };\r\n\r\n  const startPage = Math.max(0, page - 2);\r\n  const endPage = Math.min(totalPages - 1, page + 2);\r\n  const pageNumbers = [];\r\n  for (let i = startPage; i <= endPage; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"member-list-container\">\r\n      <h2>회원 관리</h2>\r\n      {/* 검색 폼 */}\r\n      <form onSubmit={handleSearchSubmit} className=\"search-form\">\r\n          <select value={searchType} onChange={(e) => setSearchType(e.target.value)}>\r\n            <option value=\"email\">이메일</option>\r\n            <option value=\"nickname\">닉네임</option>\r\n          </select>\r\n        <input\r\n          type=\"text\"\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n          placeholder=\"검색어 입력\"\r\n        />\r\n        <button type=\"submit\">검색</button>\r\n      </form>\r\n\r\n      {/* 회원 목록 테이블 */}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>이메일</th>\r\n            <th>닉네임</th>\r\n            <th>소셜 로그인</th>\r\n            <th>권한</th>\r\n            <th>보기</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {members.map((member) => (\r\n            <tr key={member.email}>\r\n              <td>{member.email}</td>\r\n              <td>{member.nickname}</td>\r\n              <td>{member.social ? \"예\" : \"아니오\"}</td>\r\n              <td>{member.roleNames && member.roleNames.join(\", \")}</td>\r\n              <td>\r\n                <span onClick={() => openEditModal(member)}>수정</span>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* 페이지네이션 */}\r\n      <div className=\"pagination\">\r\n        <button onClick={() => handlePageChange(0)} disabled={page === 0}>\r\n          처음\r\n        </button>\r\n        <button onClick={() => handlePageChange(page - 1)} disabled={page === 0}>\r\n          이전\r\n        </button>\r\n\r\n        {pageNumbers.map((pageNum) => (\r\n          <button\r\n            key={pageNum}\r\n            onClick={() => handlePageChange(pageNum)}\r\n            className={page === pageNum ? \"active\" : \"\"}\r\n          >\r\n            {pageNum + 1}\r\n          </button>\r\n        ))}\r\n\r\n        <button onClick={() => handlePageChange(page + 1)} disabled={page === totalPages - 1}>\r\n          다음\r\n        </button>\r\n        <button onClick={() => handlePageChange(totalPages - 1)} disabled={page === totalPages - 1}>\r\n          마지막\r\n        </button>\r\n      </div>\r\n\r\n      {/* 수정/삭제 모달 */}\r\n      {showModal && (\r\n        <div className=\"admin-modal\">\r\n          <div className=\"admin-modal-content\">\r\n            <h3>회원 수정/삭제</h3>\r\n            <form>\r\n              <div>\r\n                <span>이메일</span>\r\n                <input type=\"email\" name=\"email\" value={formData.email} disabled />\r\n              </div>\r\n              <div>\r\n                <span>비밀번호 (변경 시 입력, 미입력 시 기존 유지)</span>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"pw\"\r\n                  value={formData.pw}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"새 비밀번호\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <span>닉네임</span>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"nickname\"\r\n                  value={formData.nickname}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              <div>\r\n                <span>권한</span>\r\n                <select\r\n                  name=\"roleNames\"\r\n                  value={formData.roleNames[0] || \"\"}\r\n                  onChange={(e) =>\r\n                    setFormData((prev) => ({\r\n                      ...prev,\r\n                      roleNames: [e.target.value],\r\n                    }))\r\n                  }\r\n                >\r\n                  <option value=\"ADMIN\">ADMIN</option>\r\n                  <option value=\"MANAGER\">MANAGER</option>\r\n                  <option value=\"USER\">USER</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <span>소셜 로그인</span>\r\n                <input type=\"checkbox\" name=\"social\" checked={formData.social} disabled />\r\n              </div>\r\n            </form>\r\n            <div className=\"modal-actions\">\r\n              <button onClick={handleDeleteMember}>삭제</button>\r\n              <button onClick={handleUpdateMember}>수정</button>\r\n              <span className=\"modal-close-btn\" onClick={() => setShowModal(false)}>✖</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberList;\r\n","import axios from \"axios\";\r\nimport { getCookie, setCookie } from \"./cookieUtil\";\r\n\r\nconst jwtAxios=axios.create()\r\n\r\nconst refreshJWT= async (accessToken, refreshToken)=>{\r\n    const header= {headers: {\"Authorization\": `Bearer ${accessToken}`}}\r\n    const res = await axios.get(`http://43.201.20.172:8090/api/member/refresh?refreshToken=${refreshToken}`, header)\r\n\r\n    return res.data\r\n}\r\n\r\nconst beforeReq= (config) =>{\r\n    const memberInfo=getCookie(\"member\")\r\n    if(!memberInfo){\r\n        return Promise.reject(\r\n            {response:\r\n             {data: \r\n              {error: \"REQUIRE_LOGIN\"}\r\n                }\r\n            }\r\n        )\r\n    }\r\n    const {accessToken} = memberInfo\r\n    config.headers.Authorization= `Bearer ${accessToken}`\r\n    return config\r\n}\r\n\r\nconst requestFail=(err)=>{\r\n    return Promise.reject(err)\r\n}\r\n\r\nconst beforeRes=async (res)=>{\r\n\r\n    const data= res.data\r\n    if(data && data.error ==='ERROR_ACCESS_TOKEN'){\r\n        const memberCookieValue=getCookie(\"member\")\r\n        const result=await refreshJWT(memberCookieValue.accessToken,\r\n            memberCookieValue.refreshToken)\r\n        memberCookieValue.accessToken=result.accessToken\r\n        memberCookieValue.refreshToken=result.refreshToken\r\n\r\n        setCookie(\"member\", JSON.stringify(memberCookieValue), 1)\r\n\r\n        const originalRequest=res.config\r\n        originalRequest.headers.Authorization= `Bearer ${result.accessToken}`\r\n\r\n        return await axios(originalRequest)\r\n    }\r\n\r\n\r\n    return res\r\n}\r\n\r\nconst responseFail=(err)=>{\r\n    return Promise.reject(err)\r\n}\r\n\r\njwtAxios.interceptors.request.use( beforeReq, requestFail)\r\njwtAxios.interceptors.response.use(beforeRes,responseFail)\r\n\r\nexport default jwtAxios"],"names":["MemberList","members","setMembers","useState","page","setPage","totalPages","setTotalPages","searchType","setSearchType","searchValue","setSearchValue","selectedMember","setSelectedMember","showModal","setShowModal","formData","setFormData","email","pw","nickname","social","roleNames","fetchMembers","async","response","jwtAxios","get","params","size","data","content","error","console","useEffect","handleInputChange","e","name","value","type","checked","target","prev","handlePageChange","newPage","startPage","Math","max","endPage","min","pageNumbers","i","push","_jsxs","className","children","_jsx","onSubmit","preventDefault","onChange","placeholder","map","member","join","onClick","length","openEditModal","disabled","pageNum","window","confirm","delete","put","headers","axios","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","accessToken","Authorization","err","res","memberCookieValue","result","refreshToken","header","refreshJWT","setCookie","JSON","stringify","originalRequest"],"sourceRoot":""}