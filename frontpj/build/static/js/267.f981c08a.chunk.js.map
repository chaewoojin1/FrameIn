{"version":3,"file":"static/js/267.f981c08a.chunk.js","mappings":"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","sources":["components/member/MyPaymentList.jsx","pages/member/MyPaymentListPage.jsx","util/jwtUtil.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nimport \"./../../css/MyPaymentList.css\";\r\n\r\nconst MyPaymentList = () => {\r\n  const [groupedPayments, setGroupedPayments] = useState({});\r\n  const [expandedGroup, setExpandedGroup] = useState(null);\r\n\r\n  const paymentMethodLabels = {\r\n    kakaoPay: '카카오페이',\r\n    tossPay: '토스페이',\r\n    credit_card: '신용카드',\r\n    mobile: '휴대폰',\r\n  };\r\n\r\n  const fetchPaymentHistory = async () => {\r\n    try {\r\n      const response = await jwtAxios.get(\r\n        \"http://43.201.20.172:8090/api/payment/myPaymentList\",\r\n        { withCredentials: true }\r\n      );\r\n      const payments = Array.isArray(response.data) ? response.data : [];\r\n      const grouped = payments.reduce((acc, payment) => {\r\n        const key = payment.createTime.substring(0, 19);\r\n        if (!acc[key]) {\r\n          acc[key] = { representativePayment: payment, payments: [] };\r\n        }\r\n        acc[key].payments.push(payment);\r\n        return acc;\r\n      }, {});\r\n      setGroupedPayments(grouped);\r\n    } catch (error) {\r\n      console.error(\"결제 내역 가져오는 중 오류 발생:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPaymentHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"paymentHistoryContainer\">\r\n      <div className=\"paymentHistory\">\r\n        <h3>결제 내역</h3>\r\n        {Object.keys(groupedPayments).length > 0 ? (\r\n          <div className=\"paymentList\">\r\n            {Object.entries(groupedPayments).map(([time, group], index) => (\r\n              <div key={index} className=\"paymentGroup\">\r\n                <div\r\n                  className=\"paymentHeader\"\r\n                  onClick={() =>\r\n                    setExpandedGroup(expandedGroup === time ? null : time)\r\n                  }\r\n                >\r\n                  <span>{new Date(time).toLocaleDateString()} 결제</span>\r\n                  <span className=\"totalAmount\">\r\n                    {group.representativePayment.totalAmount.toLocaleString()}{\" \"}\r\n                    원\r\n                  </span>\r\n                </div>\r\n\r\n                {expandedGroup === time && (\r\n                  <div className=\"paymentDetails\">\r\n                    {group.payments.map((payment, idx) => (\r\n                      <div key={idx} className=\"paymentItem\">\r\n                        <img\r\n                          src={payment.posterPath}\r\n                          alt={payment.movieNm}\r\n                          className=\"poster\"\r\n                        />\r\n                        <div className=\"paymentInfo\">\r\n                          <div>\r\n                            <span>{payment.movieNm}</span>\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"paymentCinema-title\">{payment.cinemaName} Frame In</span> <span>{payment.theaterName}</span> <span>{payment.seatNumber}</span>\r\n                          </div>\r\n                          <div>\r\n                            <span>상영일:</span> <span>{payment.screeningDate}{\" \"}</span>\r\n                            <span>{payment.screeningTime} ~ {payment.screeningEndTime}</span>\r\n                          </div>\r\n                          <div>\r\n                            <span>결제 방법:</span> <span>{paymentMethodLabels[payment.paymentMethod]}</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <span>결제 내역이 없습니다.</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPaymentList;\r\n","import React from 'react'\r\nimport MyPaymentList from '../../components/member/MyPaymentList'\r\n\r\nconst MyPaymentListPage = () => {\r\n    return (\r\n        <>\r\n            <MyPaymentList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyPaymentListPage","import axios from \"axios\";\r\nimport { getCookie, setCookie } from \"./cookieUtil\";\r\n\r\nconst jwtAxios=axios.create()\r\n\r\nconst refreshJWT= async (accessToken, refreshToken)=>{\r\n    const header= {headers: {\"Authorization\": `Bearer ${accessToken}`}}\r\n    const res = await axios.get(`http://43.201.20.172:8090/api/member/refresh?refreshToken=${refreshToken}`, header)\r\n\r\n    return res.data\r\n}\r\n\r\nconst beforeReq= (config) =>{\r\n    const memberInfo=getCookie(\"member\")\r\n    if(!memberInfo){\r\n        return Promise.reject(\r\n            {response:\r\n             {data: \r\n              {error: \"REQUIRE_LOGIN\"}\r\n                }\r\n            }\r\n        )\r\n    }\r\n    const {accessToken} = memberInfo\r\n    config.headers.Authorization= `Bearer ${accessToken}`\r\n    return config\r\n}\r\n\r\nconst requestFail=(err)=>{\r\n    return Promise.reject(err)\r\n}\r\n\r\nconst beforeRes=async (res)=>{\r\n\r\n    const data= res.data\r\n    if(data && data.error ==='ERROR_ACCESS_TOKEN'){\r\n        const memberCookieValue=getCookie(\"member\")\r\n        const result=await refreshJWT(memberCookieValue.accessToken,\r\n            memberCookieValue.refreshToken)\r\n        memberCookieValue.accessToken=result.accessToken\r\n        memberCookieValue.refreshToken=result.refreshToken\r\n\r\n        setCookie(\"member\", JSON.stringify(memberCookieValue), 1)\r\n\r\n        const originalRequest=res.config\r\n        originalRequest.headers.Authorization= `Bearer ${result.accessToken}`\r\n\r\n        return await axios(originalRequest)\r\n    }\r\n\r\n\r\n    return res\r\n}\r\n\r\nconst responseFail=(err)=>{\r\n    return Promise.reject(err)\r\n}\r\n\r\njwtAxios.interceptors.request.use( beforeReq, requestFail)\r\njwtAxios.interceptors.response.use(beforeRes,responseFail)\r\n\r\nexport default jwtAxios"],"names":["MyPaymentList","groupedPayments","setGroupedPayments","useState","expandedGroup","setExpandedGroup","paymentMethodLabels","kakaoPay","tossPay","credit_card","mobile","useEffect","async","response","jwtAxios","get","withCredentials","grouped","Array","isArray","data","reduce","acc","payment","key","createTime","substring","representativePayment","payments","push","error","console","fetchPaymentHistory","_jsx","className","children","_jsxs","Object","keys","length","entries","map","_ref","index","time","group","onClick","Date","toLocaleDateString","totalAmount","toLocaleString","idx","src","posterPath","alt","movieNm","cinemaName","theaterName","seatNumber","screeningDate","screeningTime","screeningEndTime","paymentMethod","MyPaymentListPage","_Fragment","axios","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","accessToken","headers","Authorization","err","res","memberCookieValue","result","refreshToken","header","refreshJWT","setCookie","JSON","stringify","originalRequest"],"sourceRoot":""}